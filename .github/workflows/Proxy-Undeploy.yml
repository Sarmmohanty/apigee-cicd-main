name: rM-APIGEE-Proxy-Undeploy
run-name: ${{ github.actor }} ran pipeline for APIGEE resources undeployment.
on:
    workflow_call:
      inputs:
        apigee-environment:
          type: string
          required: true
          description: 'To Get APIGEE environment to undeploy proxy'
        
      outputs:
        job-status: 
          value: ${{ jobs.Undeploy-To-APIGEE.result }}
jobs:
    Undeploy-To-APIGEE:
        runs-on: ubuntu-latest
        permissions:
          contents: 'read'
          id-token: 'write'
        environment: ${{ inputs.apigee-environment }}
        outputs:
          step-status: ${{ steps.undeploy-failed-proxy.outcome }}
        steps:
            - name: Check out repository code
              uses: actions/checkout@v3

            - name: Authenticate with GCP using WFI
              id: 'auth'
              uses: 'google-github-actions/auth@v1'
              with:
                workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
                service_account: ${{ vars.SERVICE_ACCOUNT }}
                token_format: 'access_token'
      
            - name: Install APIGEECLI
              run: |
                npm version
                curl -L https://raw.githubusercontent.com/apigee/apigeecli/main/downloadLatest.sh | sh -
                echo "/home/runner/.apigeecli/bin" >> $GITHUB_PATH
            
            - name: Download Stable Version Artifact
              uses: actions/download-artifact@v4
              with:
                name: stable-version-artifact
                
            - name: Undeploy published version
              id: undeploy-failed-proxy
              run: |
                is_present="false"
                file_name=$(ls apiproxy/*.xml)
                proxy_name=$(basename $file_name .xml)
                active_revision=$(apigeecli apis listdeploy -t=${{ steps.auth.outputs.access_token}} -o=${{ vars.GCP_PROJECT }} -n=$proxy_name);
                echo "Active revision is $active_revision"
                let stable_revision=$(cat stable_version.txt)
                echo "Stable revision number from file $stable_revision"
                if [[ -n "$active_revision" && "$active_revision" == "{}" ]]; then
                  apigeecli apis delete -t=${{ steps.auth.outputs.access_token}} -o=${{ vars.GCP_PROJECT }} -n=$proxy_name
                else
                  api_rev_list=$(apigeecli apis get -t=${{ steps.auth.outputs.access_token}} -o=${{ vars.GCP_PROJECT }} -n=$proxy_name|jq -r .revision)  
                  for all_revisions in $(echo "$api_rev_list" | jq -r '.[]');
                  do
                      if [ $stable_revision -eq $all_revisions ]
                      then
                        p_active_revision=$(echo $active_revision|jq -r '.deployments[].revision');
                        apigeecli apis undeploy -t=${{ steps.auth.outputs.access_token}} -o=${{ vars.GCP_PROJECT }} -n=$proxy_name -v=$p_active_revision -e=${{ vars.APIGEE_ENVIRONMENT }};
                        echo "Undeployed active revision $p_active_revision"
                  
                        apigeecli apis delete -t=${{ steps.auth.outputs.access_token}} -o=${{ vars.GCP_PROJECT }} -n=$proxy_name -v=$p_active_revision;
                        echo "Deleted active revision $p_active_revision"

                        if [ "$stable_revision" -eq "$all_revisions" ] && [ "$stable_revision" -eq "$p_active_revision" ]
                        then
                          echo "Deployment skipped as there is no previous active revision available!."
                          apigeecli apis delete -t=${{ steps.auth.outputs.access_token}} -o=${{ vars.GCP_PROJECT }} -n=$proxy_name
                        else
                          apigeecli apis deploy -e=${{ vars.APIGEE_ENVIRONMENT }} -n=$proxy_name -v=$stable_revision -t=${{ steps.auth.outputs.access_token}} -o=${{ vars.GCP_PROJECT }};
                          echo "Reverted revision to $stable_revision"
                        fi
                        is_present="true";
                      fi
                  done
                fi
                echo "is_present:$is_present"
                if [ $is_present == "true" ]
                then
                  echo "### We have reverted the deployment to $proxy_name:$stable_revision :sob:" >> $GITHUB_STEP_SUMMARY
                else
                  echo "### $proxy_name:$stable_revision doesn't exist in apigee ${{ vars.APIGEE_ENVIRONMENT }}  :sob:" >> $GITHUB_STEP_SUMMARY
                fi